#!/bin/zsh
emulate -L zsh

TRAPZERR(){ echo ' ** Build Failed **'; exit 1 }
compile(){
	$CC -DUTIL_NAME=\"$2\" ${(z)1} ${(z)CFLAGS} $0:h/${2}.(c|m)([1]) -o $BINDIR/$2 #${*[2,3]}
}
c_build(){
	case $1 in
		(alert)
			c="-framework AppKit -Wno-cast-qual"
			;;
		(app)
			c="-framework AppKit -Wno-cast-qual"
			;;
		(appr)
			c="-framework AppKit -Wno-cast-qual"
			;;
		(dux)
			c="-framework CoreServices"
			;;
		(trash)
			c="-framework AppKit"
			;;
		(*)
			;;
	esac
	compile "$_CFLAGS $c" $1
}

typeset -A opts
zparseopts -K -D -E -A opts -- -install=flags -style: -prefix: -bin-prefix: -man-prefix:

# TODO test prefix setting in various ways !!
PREFIX=${${opts[--prefix]}:-${PREFIX:-${0:h}/../build}}
BINDIR=${${opts[--bin-prefix]}:-$PREFIX/bin}
MANDIR=${${opts[--man-prefix]}:-$PREFIX/man}

mkdir -p $PREFIX $BINDIR $MANDIR

if [[ -z $CC ]] {
	CC=gcc
}
if [[ -z $_CFLAGS ]] {
	_CFLAGS='-Wfatal-errors -Wformat-nonliteral -Wformat-security -Wall -Wextra -Wshadow -Wunsafe-loop-optimizations -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Wshorten-64-to-32 -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wpadded -Winline -Wstrict-aliasing  -Wdisabled-optimization -Winvalid-pch -Wnewline-eof  -fvisibility=hidden -mno-red-zone -feliminate-unused-debug-types -fmessage-length=0 -pipe -freorder-blocks -ftree-vectorize -fno-pic -mdynamic-no-pic  -std=gnu99 -gdwarf-2 -Os  -mtune=core2 -msse -msse2 -msse3 -mfpmath=sse -fdiagnostics-show-option'
	if [[ ${opts[--style]} == fat ]] {
		_CFLAGS="$_CFLAGS -arch i386 -arch x86_64 -Xarch_x86_64 -msse4"
	}
}

TARGETS=(app appr dux trash xattr)

if (( # == 0 )) { # build all targets
	for i in $TARGETS; c_build $i;
} else {
	for i in $*; c_build $i;
}

